

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jun 21 20:01:18 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.42
    13                           ; Generated 13/04/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F690 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011E                     	;# 
   114  011F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  0013                     _SSPBUF	set	19
   120  0014                     _SSPCON	set	20
   121  0014                     _SSPCONbits	set	20
   122  001F                     _ADCON0	set	31
   123  0094                     _SSPSTATbits	set	148
   124  0094                     _SSPSTAT	set	148
   125  0086                     _TRISBbits	set	134
   126  0087                     _TRISCbits	set	135
   127  0085                     _TRISAbits	set	133
   128  043E                     _TRISC6	set	1086
   129  0436                     _TRISB6	set	1078
   130  043F                     _TRISC7	set	1087
   131  0434                     _TRISB4	set	1076
   132  011F                     _ANSELH	set	287
   133  011E                     _ANSEL	set	286
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  07FD                     start_initialization:	
   139  07FD                     __initialization:	
   140  07FD                     end_of_initialization:	
   141                           ;End of C runtime variable initialization code
   142                           
   143  07FD                     __end_of__initialization:	
   144  07FD  0183               	clrf	3
   145  07FE  118A  2FD4         	ljmp	_main	;jump to C main() function
   146                           
   147                           	psect	cstackCOMMON
   148  0070                     __pcstackCOMMON:	
   149  0070                     ?_init_Slave_Output:	
   150  0070                     ??_init_Slave_Output:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0070                     ?_spiInit:	
   154                           ; 1 bytes @ 0x0
   155                           
   156  0070                     ??_spiInit:	
   157                           ; 1 bytes @ 0x0
   158                           
   159  0070                     ?_spiWrite:	
   160                           ; 1 bytes @ 0x0
   161                           
   162  0070                     ??_spiWrite:	
   163                           ; 1 bytes @ 0x0
   164                           
   165  0070                     ?_main:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0070                     spiWrite@byte:	
   169                           ; 1 bytes @ 0x0
   170                           
   171                           
   172                           ; 1 bytes @ 0x0
   173  0070                     	ds	1
   174  0071                     ??_main:	
   175                           
   176                           ; 1 bytes @ 0x1
   177  0071                     	ds	1
   178  0072                     main@value:	
   179                           
   180                           ; 1 bytes @ 0x2
   181  0072                     	ds	1
   182  0073                     main@Dummy_Var:	
   183                           
   184                           ; 1 bytes @ 0x3
   185  0073                     	ds	1
   186                           
   187                           	psect	maintext
   188  07D4                     __pmaintext:	
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 63 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;  Dummy_Var       1    3[COMMON] unsigned char 
   199 ;;  value           1    2[COMMON] unsigned char 
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, pclath, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : B00/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   209 ;;      Params:         0       0       0       0
   210 ;;      Locals:         2       0       0       0
   211 ;;      Temps:          1       0       0       0
   212 ;;      Totals:         3       0       0       0
   213 ;;Total ram usage:        3 bytes
   214 ;; Hardware stack levels required when called:    1
   215 ;; This function calls:
   216 ;;		_init_Slave_Output
   217 ;;		_spiInit
   218 ;;		_spiWrite
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           
   225                           ;psect for function _main
   226  07D4                     _main:	
   227                           
   228                           ;main.c: 64: unsigned char value = 0x02;
   229                           
   230                           ;incstack = 0
   231                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   232  07D4  3002               	movlw	2
   233  07D5  00F1               	movwf	??_main
   234  07D6  0871               	movf	??_main,w
   235  07D7  00F2               	movwf	main@value
   236                           
   237                           ;main.c: 65: unsigned char Dummy_Var = 0x03;
   238  07D8  3003               	movlw	3
   239  07D9  00F1               	movwf	??_main
   240  07DA  0871               	movf	??_main,w
   241  07DB  00F3               	movwf	main@Dummy_Var
   242                           
   243                           ;main.c: 67: spiInit();
   244  07DC  118A  27BD  118A   	fcall	_spiInit
   245                           
   246                           ;main.c: 68: init_Slave_Output();
   247  07DF  118A  27A5  118A   	fcall	_init_Slave_Output
   248  07E2                     l549:	
   249                           ;main.c: 71: while (!SSPSTATbits.BF) {
   250                           
   251                           ;main.c: 70: while(1) {
   252                           
   253  07E2  1683               	bsf	3,5	;RP0=1, select bank1
   254  07E3  1303               	bcf	3,6	;RP1=0, select bank1
   255  07E4  1814               	btfsc	20,0	;volatile
   256  07E5  2FEF               	goto	l553
   257                           
   258                           ;main.c: 72: spiWrite(0x00);
   259  07E6  3000               	movlw	0
   260  07E7  118A  27B0  118A   	fcall	_spiWrite
   261  07EA  2FE2               	goto	l549
   262  07EB                     l551:	
   263                           ;main.c: 73: }
   264                           ;main.c: 74: while (!SSPSTATbits.BF) {
   265                           
   266                           
   267                           ;main.c: 75: spiWrite(0x00);
   268  07EB  3000               	movlw	0
   269  07EC  118A  27B0  118A   	fcall	_spiWrite
   270  07EF                     l553:	
   271  07EF  1683               	bsf	3,5	;RP0=1, select bank1
   272  07F0  1303               	bcf	3,6	;RP1=0, select bank1
   273  07F1  1814               	btfsc	20,0	;volatile
   274  07F2  2FF8               	goto	l557
   275  07F3  2FEB               	goto	l551
   276  07F4                     l555:	
   277                           ;main.c: 76: }
   278                           ;main.c: 77: while (!SSPSTATbits.BF) {
   279                           
   280                           
   281                           ;main.c: 78: spiWrite(0xA3);
   282  07F4  30A3               	movlw	163
   283  07F5  118A  27B0  118A   	fcall	_spiWrite
   284  07F8                     l557:	
   285  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   286  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   287  07FA  1814               	btfsc	20,0	;volatile
   288  07FB  2FE2               	goto	l549
   289  07FC  2FF4               	goto	l555
   290  07FD                     __end_of_main:	
   291                           
   292                           	psect	text1
   293  07B0                     __ptext1:	
   294 ;; *************** function _spiWrite *****************
   295 ;; Defined at:
   296 ;;		line 57 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  byte            1    wreg     unsigned char 
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  byte            1    0[COMMON] unsigned char 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      unsigned char 
   303 ;; Registers used:
   304 ;;		wreg
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   310 ;;      Params:         0       0       0       0
   311 ;;      Locals:         1       0       0       0
   312 ;;      Temps:          0       0       0       0
   313 ;;      Totals:         1       0       0       0
   314 ;;Total ram usage:        1 bytes
   315 ;; Hardware stack levels used:    1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           
   324                           ;psect for function _spiWrite
   325  07B0                     _spiWrite:	
   326                           
   327                           ;incstack = 0
   328                           ; Regs used in _spiWrite: [wreg]
   329                           ;spiWrite@byte stored from wreg
   330  07B0  00F0               	movwf	spiWrite@byte
   331                           
   332                           ;main.c: 58: SSPBUF = byte;
   333  07B1  0870               	movf	spiWrite@byte,w
   334  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   335  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   336  07B4  0093               	movwf	19	;volatile
   337  07B5                     l39:	
   338                           ;main.c: 59: while((SSPSTAT & (1<<0)) == 0);
   339                           
   340  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   341  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   342  07B7  1C14               	btfss	20,0	;volatile
   343  07B8  2FB5               	goto	l39
   344                           
   345                           ;main.c: 60: return SSPBUF;
   346                           ;	Return value of _spiWrite is never used
   347  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   348  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   349  07BB  0813               	movf	19,w	;volatile
   350  07BC  0008               	return
   351  07BD                     __end_of_spiWrite:	
   352                           
   353                           	psect	text2
   354  07BD                     __ptext2:	
   355 ;; *************** function _spiInit *****************
   356 ;; Defined at:
   357 ;;		line 36 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   371 ;;      Params:         0       0       0       0
   372 ;;      Locals:         0       0       0       0
   373 ;;      Temps:          0       0       0       0
   374 ;;      Totals:         0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _spiInit
   386  07BD                     _spiInit:	
   387                           
   388                           ;main.c: 37: ANSEL = 0b00000000;
   389                           
   390                           ;incstack = 0
   391                           ; Regs used in _spiInit: [wreg+status,2]
   392  07BD  1283               	bcf	3,5	;RP0=0, select bank2
   393  07BE  1703               	bsf	3,6	;RP1=1, select bank2
   394  07BF  019E               	clrf	30	;volatile
   395                           
   396                           ;main.c: 38: ANSELH = 0b00000000;
   397  07C0  019F               	clrf	31	;volatile
   398                           
   399                           ;main.c: 39: TRISB4 = 1;
   400  07C1  1683               	bsf	3,5	;RP0=1, select bank1
   401  07C2  1303               	bcf	3,6	;RP1=0, select bank1
   402  07C3  1606               	bsf	6,4	;volatile
   403                           
   404                           ;main.c: 40: TRISC7 = 0;
   405  07C4  1387               	bcf	7,7	;volatile
   406                           
   407                           ;main.c: 41: TRISB6 = 1;
   408  07C5  1706               	bsf	6,6	;volatile
   409                           
   410                           ;main.c: 42: TRISC6 = 1;
   411  07C6  1707               	bsf	7,6	;volatile
   412                           
   413                           ;main.c: 44: ADCON0 = 0b00000000;
   414  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   415  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   416  07C9  019F               	clrf	31	;volatile
   417                           
   418                           ;main.c: 46: SSPCONbits.SSPEN = 0;
   419  07CA  1294               	bcf	20,5	;volatile
   420                           
   421                           ;main.c: 47: SSPSTAT = 0b01000000;
   422  07CB  3040               	movlw	64
   423  07CC  1683               	bsf	3,5	;RP0=1, select bank1
   424  07CD  1303               	bcf	3,6	;RP1=0, select bank1
   425  07CE  0094               	movwf	20	;volatile
   426                           
   427                           ;main.c: 50: SSPCON = 0b00110100;
   428  07CF  3034               	movlw	52
   429  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   430  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   431  07D2  0094               	movwf	20	;volatile
   432  07D3  0008               	return
   433  07D4                     __end_of_spiInit:	
   434                           
   435                           	psect	text3
   436  07A5                     __ptext3:	
   437 ;; *************** function _init_Slave_Output *****************
   438 ;; Defined at:
   439 ;;		line 23 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		None
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   453 ;;      Params:         0       0       0       0
   454 ;;      Locals:         0       0       0       0
   455 ;;      Temps:          0       0       0       0
   456 ;;      Totals:         0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _init_Slave_Output
   468  07A5                     _init_Slave_Output:	
   469                           
   470                           ;main.c: 26: TRISAbits.TRISA2 = 0;
   471                           
   472                           ;incstack = 0
   473                           ; Regs used in _init_Slave_Output: []
   474  07A5  1683               	bsf	3,5	;RP0=1, select bank1
   475  07A6  1303               	bcf	3,6	;RP1=0, select bank1
   476  07A7  1105               	bcf	5,2	;volatile
   477                           
   478                           ;main.c: 27: TRISCbits.TRISC0 = 0;
   479  07A8  1007               	bcf	7,0	;volatile
   480                           
   481                           ;main.c: 28: TRISCbits.TRISC1 = 0;
   482  07A9  1087               	bcf	7,1	;volatile
   483                           
   484                           ;main.c: 29: TRISCbits.TRISC2 = 0;
   485  07AA  1107               	bcf	7,2	;volatile
   486                           
   487                           ;main.c: 30: TRISBbits.TRISB5 = 0;
   488  07AB  1286               	bcf	6,5	;volatile
   489                           
   490                           ;main.c: 31: TRISBbits.TRISB7 = 0;
   491  07AC  1386               	bcf	6,7	;volatile
   492                           
   493                           ;main.c: 32: TRISCbits.TRISC3 = 0;
   494  07AD  1187               	bcf	7,3	;volatile
   495                           
   496                           ;main.c: 33: TRISCbits.TRISC4 = 0;
   497  07AE  1207               	bcf	7,4	;volatile
   498  07AF  0008               	return
   499  07B0                     __end_of_init_Slave_Output:	
   500  007E                     btemp	set	126	;btemp
   501  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                  _init_Slave_Output
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Slave_Output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_Slave_Output
   _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jun 21 20:01:18 2017

               __CFG_CP$OFF 0000                 _SSPSTATbits 0094                          l39 07B5  
              spiWrite@byte 0070                         l551 07EB                         l553 07EF  
                       l555 07F4                         l557 07F8                         l549 07E2  
              __CFG_CPD$OFF 0000               __CFG_FCMEN$ON 0000               main@Dummy_Var 0073  
                      _main 07D4                        btemp 007E               __CFG_BOREN$ON 0000  
                      start 0000               __CFG_IESO$OFF 0000               __CFG_MCLRE$ON 0000  
                     ?_main 0070               __CFG_WDTE$OFF 0000                       _ANSEL 011E  
           __end_of_spiInit 07D4                       status 0003                       wtemp0 007E  
         _init_Slave_Output 07A5             __initialization 07FD                __end_of_main 07FD  
        ?_init_Slave_Output 0070                      ??_main 0071         ??_init_Slave_Output 0070  
                    _ADCON0 001F                      _ANSELH 011F                      _TRISB4 0434  
                    _TRISB6 0436                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013   __end_of_init_Slave_Output 07B0  
            __CFG_PWRTE$OFF 0000            __end_of_spiWrite 07BD                   ??_spiInit 0070  
   __end_of__initialization 07FD              __pcstackCOMMON 0070  __size_of_init_Slave_Output 000B  
                __pmaintext 07D4                     _SSPSTAT 0094                   ?_spiWrite 0070  
                   __ptext1 07B0                     __ptext2 07BD                     __ptext3 07A5  
                   _spiInit 07BD        end_of_initialization 07FD                  ??_spiWrite 0070  
                 _TRISAbits 0085                   _TRISBbits 0086                   _TRISCbits 0087  
       start_initialization 07FD                   ___latbits 0001           __size_of_spiWrite 000D  
                  ?_spiInit 0070                   main@value 0072            __size_of_spiInit 0017  
             __size_of_main 0029                    _spiWrite 07B0          __CFG_FOSC$INTRCCLK 0000  
                _SSPCONbits 0014  
