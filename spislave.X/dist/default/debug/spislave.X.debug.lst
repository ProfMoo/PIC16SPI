

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jun 21 19:45:43 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.42
    13                           ; Generated 13/04/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F690 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011E                     	;# 
   114  011F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  0013                     _SSPBUF	set	19
   120  0014                     _SSPCON	set	20
   121  0014                     _SSPCONbits	set	20
   122  001F                     _ADCON0	set	31
   123  0094                     _SSPSTATbits	set	148
   124  0094                     _SSPSTAT	set	148
   125  0086                     _TRISBbits	set	134
   126  0087                     _TRISCbits	set	135
   127  0085                     _TRISAbits	set	133
   128  043E                     _TRISC6	set	1086
   129  0436                     _TRISB6	set	1078
   130  043F                     _TRISC7	set	1087
   131  0434                     _TRISB4	set	1076
   132  011F                     _ANSELH	set	287
   133  011E                     _ANSEL	set	286
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  07FD                     start_initialization:	
   139  07FD                     __initialization:	
   140  07FD                     end_of_initialization:	
   141                           ;End of C runtime variable initialization code
   142                           
   143  07FD                     __end_of__initialization:	
   144  07FD  0183               	clrf	3
   145  07FE  118A  2FD9         	ljmp	_main	;jump to C main() function
   146                           
   147                           	psect	cstackCOMMON
   148  0071                     __pcstackCOMMON:	
   149  0071                     ?_init_Slave_Output:	
   150  0071                     ??_init_Slave_Output:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0071                     ?_spiInit:	
   154                           ; 1 bytes @ 0x0
   155                           
   156  0071                     ??_spiInit:	
   157                           ; 1 bytes @ 0x0
   158                           
   159  0071                     ?_spiWrite:	
   160                           ; 1 bytes @ 0x0
   161                           
   162  0071                     ??_spiWrite:	
   163                           ; 1 bytes @ 0x0
   164                           
   165  0071                     ?_main:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0071                     spiWrite@byte:	
   169                           ; 1 bytes @ 0x0
   170                           
   171                           
   172                           ; 1 bytes @ 0x0
   173  0071                     	ds	1
   174  0072                     ??_main:	
   175                           
   176                           ; 1 bytes @ 0x1
   177  0072                     	ds	1
   178  0073                     main@value:	
   179                           
   180                           ; 1 bytes @ 0x2
   181  0073                     	ds	1
   182  0074                     main@Dummy_Var:	
   183                           
   184                           ; 1 bytes @ 0x3
   185  0074                     	ds	1
   186                           
   187                           	psect	maintext
   188  07D9                     __pmaintext:	
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 63 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;  Dummy_Var       1    3[COMMON] unsigned char 
   199 ;;  value           1    2[COMMON] unsigned char 
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, pclath, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : B00/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   209 ;;      Params:         0       0       0       0
   210 ;;      Locals:         2       0       0       0
   211 ;;      Temps:          1       0       0       0
   212 ;;      Totals:         3       0       0       0
   213 ;;Total ram usage:        3 bytes
   214 ;; Hardware stack levels required when called:    1
   215 ;; This function calls:
   216 ;;		_init_Slave_Output
   217 ;;		_spiInit
   218 ;;		_spiWrite
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           
   225                           ;psect for function _main
   226  07D9                     _main:	
   227                           
   228                           ;main.c: 64: unsigned char value = 0x02;
   229                           
   230                           ;incstack = 0
   231                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   232  07D9  3002               	movlw	2
   233  07DA  00F2               	movwf	??_main
   234  07DB  0872               	movf	??_main,w
   235  07DC  00F3               	movwf	main@value
   236                           
   237                           ;main.c: 65: unsigned char Dummy_Var = 0x03;
   238  07DD  3003               	movlw	3
   239  07DE  00F2               	movwf	??_main
   240  07DF  0872               	movf	??_main,w
   241  07E0  00F4               	movwf	main@Dummy_Var
   242                           
   243                           ;main.c: 67: spiInit();
   244  07E1  118A  27C2  118A   	fcall	_spiInit
   245                           
   246                           ;main.c: 68: init_Slave_Output();
   247  07E4  118A  27AA  118A   	fcall	_init_Slave_Output
   248  07E7                     l546:	
   249                           ;main.c: 71: while (!SSPSTATbits.BF)
   250                           
   251                           ;main.c: 70: while(1) {
   252                           
   253  07E7  1683               	bsf	3,5	;RP0=1, select bank1
   254  07E8  1303               	bcf	3,6	;RP1=0, select bank1
   255  07E9  1814               	btfsc	20,0	;volatile
   256  07EA  2FF8               	goto	l550
   257                           
   258                           ;main.c: 72: {
   259                           ;main.c: 73: spiWrite(0x00);
   260  07EB  3000               	movlw	0
   261  07EC  118A  27B5  118A   	fcall	_spiWrite
   262                           
   263                           ;main.c: 74: spiWrite(0x00);
   264  07EF  3000               	movlw	0
   265  07F0  118A  27B5  118A   	fcall	_spiWrite
   266  07F3  2FE7               	goto	l546
   267  07F4                     l548:	
   268                           ;main.c: 76: }
   269                           ;main.c: 77: while (SSPSTATbits.BF) {
   270                           
   271                           
   272                           ;main.c: 78: spiWrite(0xA3);
   273  07F4  30A3               	movlw	163
   274  07F5  118A  27B5  118A   	fcall	_spiWrite
   275  07F8                     l550:	
   276  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   277  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   278  07FA  1C14               	btfss	20,0	;volatile
   279  07FB  2FE7               	goto	l546
   280  07FC  2FF4               	goto	l548
   281  07FD                     __end_of_main:	
   282                           
   283                           	psect	text1
   284  07B5                     __ptext1:	
   285 ;; *************** function _spiWrite *****************
   286 ;; Defined at:
   287 ;;		line 57 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;  byte            1    wreg     unsigned char 
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  byte            1    0[COMMON] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      unsigned char 
   294 ;; Registers used:
   295 ;;		wreg
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   301 ;;      Params:         0       0       0       0
   302 ;;      Locals:         1       0       0       0
   303 ;;      Temps:          0       0       0       0
   304 ;;      Totals:         1       0       0       0
   305 ;;Total ram usage:        1 bytes
   306 ;; Hardware stack levels used:    1
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _spiWrite
   316  07B5                     _spiWrite:	
   317                           
   318                           ;incstack = 0
   319                           ; Regs used in _spiWrite: [wreg]
   320                           ;spiWrite@byte stored from wreg
   321  07B5  00F1               	movwf	spiWrite@byte
   322                           
   323                           ;main.c: 58: SSPBUF = byte;
   324  07B6  0871               	movf	spiWrite@byte,w
   325  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   326  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   327  07B9  0093               	movwf	19	;volatile
   328  07BA                     l39:	
   329                           ;main.c: 59: while((SSPSTAT & (1<<0)) == 0);
   330                           
   331  07BA  1683               	bsf	3,5	;RP0=1, select bank1
   332  07BB  1303               	bcf	3,6	;RP1=0, select bank1
   333  07BC  1C14               	btfss	20,0	;volatile
   334  07BD  2FBA               	goto	l39
   335                           
   336                           ;main.c: 60: return SSPBUF;
   337                           ;	Return value of _spiWrite is never used
   338  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   339  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   340  07C0  0813               	movf	19,w	;volatile
   341  07C1  0008               	return
   342  07C2                     __end_of_spiWrite:	
   343                           
   344                           	psect	text2
   345  07C2                     __ptext2:	
   346 ;; *************** function _spiInit *****************
   347 ;; Defined at:
   348 ;;		line 36 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   362 ;;      Params:         0       0       0       0
   363 ;;      Locals:         0       0       0       0
   364 ;;      Temps:          0       0       0       0
   365 ;;      Totals:         0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _spiInit
   377  07C2                     _spiInit:	
   378                           
   379                           ;main.c: 37: ANSEL = 0b00000000;
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _spiInit: [wreg+status,2]
   383  07C2  1283               	bcf	3,5	;RP0=0, select bank2
   384  07C3  1703               	bsf	3,6	;RP1=1, select bank2
   385  07C4  019E               	clrf	30	;volatile
   386                           
   387                           ;main.c: 38: ANSELH = 0b00000000;
   388  07C5  019F               	clrf	31	;volatile
   389                           
   390                           ;main.c: 39: TRISB4 = 1;
   391  07C6  1683               	bsf	3,5	;RP0=1, select bank1
   392  07C7  1303               	bcf	3,6	;RP1=0, select bank1
   393  07C8  1606               	bsf	6,4	;volatile
   394                           
   395                           ;main.c: 40: TRISC7 = 0;
   396  07C9  1387               	bcf	7,7	;volatile
   397                           
   398                           ;main.c: 41: TRISB6 = 1;
   399  07CA  1706               	bsf	6,6	;volatile
   400                           
   401                           ;main.c: 42: TRISC6 = 1;
   402  07CB  1707               	bsf	7,6	;volatile
   403                           
   404                           ;main.c: 44: ADCON0 = 0b00000000;
   405  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   406  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   407  07CE  019F               	clrf	31	;volatile
   408                           
   409                           ;main.c: 46: SSPCONbits.SSPEN = 0;
   410  07CF  1294               	bcf	20,5	;volatile
   411                           
   412                           ;main.c: 47: SSPSTAT = 0b01000000;
   413  07D0  3040               	movlw	64
   414  07D1  1683               	bsf	3,5	;RP0=1, select bank1
   415  07D2  1303               	bcf	3,6	;RP1=0, select bank1
   416  07D3  0094               	movwf	20	;volatile
   417                           
   418                           ;main.c: 50: SSPCON = 0b00110100;
   419  07D4  3034               	movlw	52
   420  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   421  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   422  07D7  0094               	movwf	20	;volatile
   423  07D8  0008               	return
   424  07D9                     __end_of_spiInit:	
   425                           
   426                           	psect	text3
   427  07AA                     __ptext3:	
   428 ;; *************** function _init_Slave_Output *****************
   429 ;; Defined at:
   430 ;;		line 23 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		None
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   444 ;;      Params:         0       0       0       0
   445 ;;      Locals:         0       0       0       0
   446 ;;      Temps:          0       0       0       0
   447 ;;      Totals:         0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _init_Slave_Output
   459  07AA                     _init_Slave_Output:	
   460                           
   461                           ;main.c: 26: TRISAbits.TRISA2 = 0;
   462                           
   463                           ;incstack = 0
   464                           ; Regs used in _init_Slave_Output: []
   465  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   466  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   467  07AC  1105               	bcf	5,2	;volatile
   468                           
   469                           ;main.c: 27: TRISCbits.TRISC0 = 0;
   470  07AD  1007               	bcf	7,0	;volatile
   471                           
   472                           ;main.c: 28: TRISCbits.TRISC1 = 0;
   473  07AE  1087               	bcf	7,1	;volatile
   474                           
   475                           ;main.c: 29: TRISCbits.TRISC2 = 0;
   476  07AF  1107               	bcf	7,2	;volatile
   477                           
   478                           ;main.c: 30: TRISBbits.TRISB5 = 0;
   479  07B0  1286               	bcf	6,5	;volatile
   480                           
   481                           ;main.c: 31: TRISBbits.TRISB7 = 0;
   482  07B1  1386               	bcf	6,7	;volatile
   483                           
   484                           ;main.c: 32: TRISCbits.TRISC3 = 0;
   485  07B2  1187               	bcf	7,3	;volatile
   486                           
   487                           ;main.c: 33: TRISCbits.TRISC4 = 0;
   488  07B3  1207               	bcf	7,4	;volatile
   489  07B4  0008               	return
   490  07B5                     __end_of_init_Slave_Output:	
   491  007E                     btemp	set	126	;btemp
   492  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                  _init_Slave_Output
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Slave_Output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_Slave_Output
   _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      4       4       1       30.8%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            45      0       0       8        0.0%
BANK2               45      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jun 21 19:45:43 2017

               __CFG_CP$OFF 0000                 _SSPSTATbits 0094                          l39 07BA  
              spiWrite@byte 0071                         l550 07F8                         l546 07E7  
                       l548 07F4                __CFG_CPD$OFF 0000               __CFG_FCMEN$ON 0000  
             main@Dummy_Var 0074                        _main 07D9                        btemp 007E  
             __CFG_BOREN$ON 0000                        start 0001               __CFG_IESO$OFF 0000  
             __CFG_MCLRE$ON 0000                       ?_main 0071               __CFG_WDTE$OFF 0000  
                     _ANSEL 011E             __end_of_spiInit 07D9                       status 0003  
                     wtemp0 007E           _init_Slave_Output 07AA             __initialization 07FD  
              __end_of_main 07FD          ?_init_Slave_Output 0071                      ??_main 0072  
       ??_init_Slave_Output 0071                      _ADCON0 001F                      _ANSELH 011F  
                    _TRISB4 0434                      _TRISB6 0436                      _TRISC6 043E  
                    _TRISC7 043F                      _SSPCON 0014                      _SSPBUF 0013  
 __end_of_init_Slave_Output 07B5              __CFG_PWRTE$OFF 0000            __end_of_spiWrite 07C2  
                 ??_spiInit 0071     __end_of__initialization 07FD              __pcstackCOMMON 0071  
__size_of_init_Slave_Output 000B                  __pmaintext 07D9                     _SSPSTAT 0094  
                 ?_spiWrite 0071                     __ptext1 07B5                     __ptext2 07C2  
                   __ptext3 07AA                     _spiInit 07C2        end_of_initialization 07FD  
                ??_spiWrite 0071                   _TRISAbits 0085                   _TRISBbits 0086  
                 _TRISCbits 0087         start_initialization 07FD                   ___latbits 0001  
         __size_of_spiWrite 000D                    ?_spiInit 0071                   main@value 0073  
          __size_of_spiInit 0017               __size_of_main 0024                    _spiWrite 07B5  
        __CFG_FOSC$INTRCCLK 0000                  _SSPCONbits 0014  
